aliases:
  - &restore-npm-cache
    keys:
      - v1-dependencies-{{ checksum "package-lock.json" }}
      - v1-dependencies-master
      - v1-dependencies-
  - &restore-webpack-cache
    keys:
      - v1-webpackcache-{{ checksum "package.json" }}
      - v1-webpackcache-master
      - v1-webpackcache-
  - &restore-dist-cache
    keys:
      - v1-dist-{{ .Environment.CIRCLE_SHA1 }}
      - v1-dist-master
      - v1-dist-

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10

version: 2.1
jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run:
          name: Install Node modules
          command: npm i -ci
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  build-pwa:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - restore_cache: *restore-webpack-cache
      - run:
          name: Build Project
          command: npm run build
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - build
      - save_cache:
          key: v1-webpackcache-{{ checksum "package.json" }}
          paths:
            - node_modules/.cache

  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-npm-cache
      - run:
          name: Run Unprefixed Version Check
          command: npm run check:versions
      - run:
          name: Run TSLint
          command: npm run lint
      - run:
          name: Run Test Typescript Compile
          command: npm run check:compile

  gimbal:
    <<: *defaults
    docker:
      - image: circleci/node:latest-browsers
    steps:
      - checkout
      - restore_cache: *restore-dist-cache
      - run:
          name: Setup npm
          command: |
            printf "@modus:registry=https://npm.modus.app\n//npm.modus.app/:_authToken=\"%s\"" "$MODUS_NPM_TOKEN" >> ~/.npmrc
            npm set prefix=/home/circleci/npm
            echo 'export PATH=/home/circleci/npm/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Install Gimbal
          command: npm install -g @modus/gimbal
      - run:
          name: Run Gimbal
          command: source $BASH_ENV && gimbal
      - store_artifacts:
          path: ./artifacts

workflows:
  version: 2
  build-and-test:
    jobs:
      - install-dependencies
      - lint:
          requires:
            - install-dependencies
      - build-pwa:
          requires:
            - lint
      - gimbal:
          requires:
            - build-pwa
